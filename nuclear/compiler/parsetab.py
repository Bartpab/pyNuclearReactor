
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'normal_elASSIGN BG_CLOSE_EL BG_OPEN_EL END_EL EV_FLAG EXE_FLAG FOR FOR ID IN IN NORMSTRING NUMBER PUNCT QUOTE_1 QUOTE_2empty :attrs : attrs attr \n             | attr \n             | empty \n        expr : id \n    \n        assign_statement : id ASSIGN expr\n    \n        statement : assign_statement \n                  | expr\n    static_attr : ID ASSIGN QUOTE_1 NUMBER QUOTE_1\n           | ID ASSIGN QUOTE_2 NUMBER QUOTE_2\n           | ID ASSIGN NORMSTRING\n    exec_attr : EXE_FLAG ID ASSIGN QUOTE_1 expr QUOTE_1\n           | EXE_FLAG ID ASSIGN QUOTE_2 expr QUOTE_2\n    event_attr : EV_FLAG ID ASSIGN QUOTE_1 statement QUOTE_1\n           | EV_FLAG ID ASSIGN QUOTE_2 statement QUOTE_2\n    attr : static_attr\n           | exec_attr\n           | event_attr\n    \n        id : id PUNCT ID\n            | ID\n    \n        end_el : BG_CLOSE_EL ID END_EL\n    op_el : BG_OPEN_EL ID attrs END_EL\n    \n        for_el : BG_OPEN_EL FOR ID IN id END_EL els BG_CLOSE_EL FOR END_EL\n    \n       normal_el : op_el els end_el \n    \n        els : els el\n            | el\n            | empty\n    el : normal_el\n          | for_el \n    '
    
_lr_action_items = {'BG_OPEN_EL':([0,2,4,5,6,7,8,11,12,27,31,46,58,68,],[3,9,9,-26,-27,-28,-29,-24,-25,-22,-21,9,9,-23,]),'$end':([1,11,31,],[0,-24,-21,]),'BG_CLOSE_EL':([2,4,5,6,7,8,11,12,27,31,46,58,68,],[-1,13,-26,-27,-28,-29,-24,-25,-22,-21,-1,65,-23,]),'ID':([3,9,10,13,14,16,17,18,19,20,21,22,23,28,32,35,42,43,44,45,47,48,49,60,61,62,63,64,],[10,10,15,24,25,15,-3,-4,-16,-17,-18,29,30,-2,38,-11,38,38,38,38,59,-9,-10,-12,-13,-14,38,-15,]),'FOR':([9,65,],[14,67,]),'END_EL':([10,16,17,18,19,20,21,24,28,35,38,39,48,49,59,60,61,62,64,67,],[-1,27,-3,-4,-16,-17,-18,31,-2,-11,-20,46,-9,-10,-19,-12,-13,-14,-15,68,]),'EXE_FLAG':([10,16,17,18,19,20,21,28,35,48,49,60,61,62,64,],[22,22,-3,-4,-16,-17,-18,-2,-11,-9,-10,-12,-13,-14,-15,]),'EV_FLAG':([10,16,17,18,19,20,21,28,35,48,49,60,61,62,64,],[23,23,-3,-4,-16,-17,-18,-2,-11,-9,-10,-12,-13,-14,-15,]),'ASSIGN':([15,29,30,38,56,59,],[26,36,37,-20,63,-19,]),'IN':([25,],[32,]),'QUOTE_1':([26,36,37,38,40,50,51,53,54,55,56,59,66,],[33,42,44,-20,48,60,-5,62,-7,-8,-5,-19,-6,]),'QUOTE_2':([26,36,37,38,41,51,52,54,55,56,57,59,66,],[34,43,45,-20,49,-5,61,-7,-8,-5,64,-19,-6,]),'NORMSTRING':([26,],[35,]),'NUMBER':([33,34,],[40,41,]),'PUNCT':([38,39,51,56,59,],[-20,47,47,47,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'normal_el':([0,2,4,46,58,],[1,7,7,7,7,]),'op_el':([0,2,4,46,58,],[2,2,2,2,2,]),'els':([2,46,],[4,58,]),'el':([2,4,46,58,],[5,12,5,12,]),'empty':([2,10,46,],[6,18,6,]),'for_el':([2,4,46,58,],[8,8,8,8,]),'end_el':([4,],[11,]),'attrs':([10,],[16,]),'attr':([10,16,],[17,28,]),'static_attr':([10,16,],[19,19,]),'exec_attr':([10,16,],[20,20,]),'event_attr':([10,16,],[21,21,]),'id':([32,42,43,44,45,63,],[39,51,51,56,56,51,]),'expr':([42,43,44,45,63,],[50,52,55,55,66,]),'statement':([44,45,],[53,57,]),'assign_statement':([44,45,],[54,54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> normal_el","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',4),
  ('attrs -> attrs attr','attrs',2,'p_attrs','parser.py',8),
  ('attrs -> attr','attrs',1,'p_attrs','parser.py',9),
  ('attrs -> empty','attrs',1,'p_attrs','parser.py',10),
  ('expr -> id','expr',1,'p_expr','parser.py',19),
  ('assign_statement -> id ASSIGN expr','assign_statement',3,'p_assign_statement','parser.py',25),
  ('statement -> assign_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> expr','statement',1,'p_statement','parser.py',38),
  ('static_attr -> ID ASSIGN QUOTE_1 NUMBER QUOTE_1','static_attr',5,'p_static_attr','parser.py',43),
  ('static_attr -> ID ASSIGN QUOTE_2 NUMBER QUOTE_2','static_attr',5,'p_static_attr','parser.py',44),
  ('static_attr -> ID ASSIGN NORMSTRING','static_attr',3,'p_static_attr','parser.py',45),
  ('exec_attr -> EXE_FLAG ID ASSIGN QUOTE_1 expr QUOTE_1','exec_attr',6,'p_exec_attr','parser.py',62),
  ('exec_attr -> EXE_FLAG ID ASSIGN QUOTE_2 expr QUOTE_2','exec_attr',6,'p_exec_attr','parser.py',63),
  ('event_attr -> EV_FLAG ID ASSIGN QUOTE_1 statement QUOTE_1','event_attr',6,'p_event_attr','parser.py',75),
  ('event_attr -> EV_FLAG ID ASSIGN QUOTE_2 statement QUOTE_2','event_attr',6,'p_event_attr','parser.py',76),
  ('attr -> static_attr','attr',1,'p_attr','parser.py',87),
  ('attr -> exec_attr','attr',1,'p_attr','parser.py',88),
  ('attr -> event_attr','attr',1,'p_attr','parser.py',89),
  ('id -> id PUNCT ID','id',3,'p_id','parser.py',95),
  ('id -> ID','id',1,'p_id','parser.py',96),
  ('end_el -> BG_CLOSE_EL ID END_EL','end_el',3,'p_end_el','parser.py',107),
  ('op_el -> BG_OPEN_EL ID attrs END_EL','op_el',4,'p_op_el','parser.py',112),
  ('for_el -> BG_OPEN_EL FOR ID IN id END_EL els BG_CLOSE_EL FOR END_EL','for_el',10,'p_for_el','parser.py',134),
  ('normal_el -> op_el els end_el','normal_el',3,'p_normal_el','parser.py',144),
  ('els -> els el','els',2,'p_els','parser.py',154),
  ('els -> el','els',1,'p_els','parser.py',155),
  ('els -> empty','els',1,'p_els','parser.py',156),
  ('el -> normal_el','el',1,'p_el','parser.py',164),
  ('el -> for_el','el',1,'p_el','parser.py',165),
]
